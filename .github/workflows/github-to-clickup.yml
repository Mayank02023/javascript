name: GitHub to ClickUp Automation

on:
  pull_request:
    types: [opened, closed, reopened]
  issues:
    types: [closed, reopened]
  issue_comment:
    types: [created]
  pull_request_review:
    types: [submitted]

jobs:
  sync-with-clickup:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Extract ClickUp Task ID
        id: extract
        run: |
          echo "Extracting ClickUp task ID..."

          case "${{ github.event_name }}" in
            pull_request)
              TEXT="${{ github.event.pull_request.title }} ${{ github.event.pull_request.body }}"
              ;;
            issues)
              TEXT="${{ github.event.issue.title }} ${{ github.event.issue.body }}"
              ;;
            issue_comment)
              TEXT="${{ github.event.issue.title }} ${{ github.event.issue.body }} ${{ github.event.comment.body }}"
              ;;
            pull_request_review)
              TEXT="${{ github.event.pull_request.title }} ${{ github.event.pull_request.body }} ${{ github.event.review.body }}"
              ;;
          esac

          TASK_ID=$(echo "$TEXT" | grep -oE '#[a-z0-9]{9}' | head -n1 | tr -d '#')
          echo "task_id=$TASK_ID" >> $GITHUB_OUTPUT

      - name: Send Update to ClickUp
        if: steps.extract.outputs.task_id != ''
        run: |
          echo "Preparing ClickUp comment..."

          case "${{ github.event_name }}" in
            pull_request)
              if [ "${{ github.event.action }}" = "opened" ]; then
                EVENT="PR opened"
              elif [ "${{ github.event.action }}" = "closed" ] && [ "${{ github.event.pull_request.merged }}" = "true" ]; then
                EVENT="PR merged"
              elif [ "${{ github.event.action }}" = "reopened" ]; then
                EVENT="PR reopened"
              else
                exit 0
              fi
              URL="https://github.com/${{ github.repository }}/pull/${{ github.event.pull_request.number }}"
              ;;
            issues)
              if [ "${{ github.event.action }}" = "closed" ]; then
                EVENT="Issue closed"
              elif [ "${{ github.event.action }}" = "reopened" ]; then
                EVENT="Issue reopened"
              else
                exit 0
              fi
              URL="https://github.com/${{ github.repository }}/issues/${{ github.event.issue.number }}"
              ;;
            issue_comment)
              EVENT="Issue comment: ${{ github.event.comment.body }}"
              URL="https://github.com/${{ github.repository }}/issues/${{ github.event.issue.number }}#issuecomment-${{ github.event.comment.id }}"
              ;;
            pull_request_review)
              EVENT="PR reviewed: ${{ github.event.review.state }}"
              URL="https://github.com/${{ github.repository }}/pull/${{ github.event.pull_request.number }}#pullrequestreview-${{ github.event.review.id }}"
              ;;
          esac

          COMMENT_TEXT="ðŸ”” *${EVENT}* on [GitHub](${URL})"

          curl -X POST "https://api.clickup.com/api/v2/task/${{ steps.extract.outputs.task_id }}/comment" \
            -H "Authorization: ${{ secrets.CLICKUP_API_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d "{\"comment_text\": \"$COMMENT_TEXT\"}"

      - name: Update ClickUp Task Status Based on Event
        if: steps.extract.outputs.task_id != ''
        run: |
          echo "Determining if status update is needed..."

          STATUS=""

          case "${{ github.event_name }}" in
            pull_request)
              if [ "${{ github.event.action }}" = "opened" ]; then
                STATUS="IN REVIEW"
              elif [ "${{ github.event.action }}" = "closed" ] && [ "${{ github.event.pull_request.merged }}" = "true" ]; then
                STATUS="COMPLETE"
              fi
              ;;
            issues)
              if [ "${{ github.event.action }}" = "closed" ]; then
                STATUS="READY FOR RELEASE"
              elif [ "${{ github.event.action }}" = "reopened" ]; then
                STATUS="IN PROGRESS"
              fi
              ;;
          esac

          if [ "$STATUS" != "" ]; then
            echo "Updating ClickUp task status to '$STATUS'..."
            curl -X PUT "https://api.clickup.com/api/v2/task/${{ steps.extract.outputs.task_id }}" \
              -H "Authorization: ${{ secrets.CLICKUP_API_TOKEN }}" \
              -H "Content-Type: application/json" \
              -d "{\"status\": \"$STATUS\"}"
          else
            echo "No status change needed."
          fi
